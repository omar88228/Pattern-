package app;

import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;

import Builder.AbstractBuilder;
import Builder.BuilderAddress;
import Builder.BuilderVilla;
import entity.*;
import enumeration.Type;

public class Main {

	public static void main(String[] args) {
		int surface = 0;
		int localNumber = 0;
		int floor = 0;
		int numberOfSwimmingpools=0;
		String type = null;
		String gateType=null ;
		String street = null, city = null, province = null, region = null;

		int cap = 0;
		Singleton sing = Singleton.getInstance();
		ArrayList<String> attributeList = sing.getLista();
		Immobile immobile = null;
		BuilderAddress builderAddress = new BuilderAddress();

		String[] attributesName = attributeList.get(0).split(",");

		

		for (int i = 1; i < attributeList.size(); i++) {
			String[] attributes = attributeList.get(i).split(",");
			
			for (int j = 0; j < attributes.length; j++) {
				if (attributesName[j].equals("surface")) {
					surface = Integer.parseInt(attributes[j]);

				}
				if (attributesName[j].equals("localNumber")&&!attributes[j].isBlank()) {
					localNumber = Integer.parseInt(attributes[j]);
				}
				if (attributesName[j].equals("floor")&& !attributes[j].isBlank()) {
					floor = Integer.parseInt(attributes[j]);
				}
				if (attributesName[j].equals("type")) {
					type = attributes[j];

				}
				if (attributesName[j].equals("street")) {
					street = attributes[j];

				}
				if (attributesName[j].equals("city")) {
					city = attributes[j];

				}
				if (attributesName[j].equals("province")) {
					province = attributes[j];

				}
				if (attributesName[j].equals("region")) {
					region = attributes[j];

				}
				if (attributesName[j].equals("cap")) {
					cap = Integer.parseInt(attributes[j]);

				}
				if (attributesName[j].equalsIgnoreCase("numberOfSwimmingpools")&&!attributes[j].isBlank()) {
					numberOfSwimmingpools = Integer.parseInt(attributes[j]);
					

				}
				if (attributesName[j].equals("gateType")) {
					gateType = attributes[j];

				}
			}
			Address address = builderAddress.Cap(cap).City(city).Street(street).Region(region).Province(province)
					.build();

			if (type.equalsIgnoreCase("VILLA")) {
				BuilderVilla builderVilla = new BuilderVilla();
				immobile = builderVilla.Address(address).gateType(gateType)
						.LocalNumber(localNumber).numberOfSwimmingpools(numberOfSwimmingpools)
						.Surface(surface).type(type).build();
				System.out.println(immobile);
			}
			System.out.println(immobile);
			
		}

	}

}

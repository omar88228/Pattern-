package Builder;

import entity.Address;
import entity.Garage;
import entity.Immobile;
import entity.Villa;
import enumeration.Type;

public class BuilderVilla extends AbstractBuilder<BuilderVilla> {
	
	private int surface;
	private Address address;
	private Type type ;
	private int localNumber ,numberOfSwimmingpools;
	private String gateType;

	public BuilderVilla() {
		super();
		

	}

	public BuilderVilla numberOfSwimmingpools(int numberOfSwimmingpools) {

		this.numberOfSwimmingpools=numberOfSwimmingpools;
		return this;
	}

	public BuilderVilla gateType(String gateType) {

		this.gateType=gateType;
		return getThis();
	}

	
	
	@Override
	public BuilderVilla surface(int surface) {
		this.surface=surface;
		return this;
	}

	@Override
	public BuilderVilla localNumber(int localNumber) {
		// TODO Auto-generated method stub
		return super.localNumber(localNumber);
	}

	@Override
	public BuilderVilla address(Address address) {
		// TODO Auto-generated method stub
		return super.address(address);
	}

	@Override
	public BuilderVilla type(String type) {
		// TODO Auto-generated method stub
		return super.type(type);
	}

	@Override
	public BuilderVilla getThis() {

		return this;
	}

	@Override
	public Villa build() {
		// TODO Auto-generated method stub
		return new Villa();
	}

}

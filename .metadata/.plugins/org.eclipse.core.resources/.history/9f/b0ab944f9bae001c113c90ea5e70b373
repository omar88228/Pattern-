package Builder;

import entity.Address;
import entity.IEstate;
import entity.Immobile;
import enumeration.Type;

public abstract class AbstractBuilder <T extends AbstractBuilder<T>>  implements IBuilder  {
	private int surface;
	private Address address;
	private Type type ;
	private int localNumber ;
	
	
	private AbstractBuilder()  {
		
	}
	
	@Override
	public T Surface(int surface) {
		this.surface=surface;
		return getThis();
	}
	@Override
	public T LocalNumber(int localNumber) {
		immobile.setLocalNumber(localNumber);
		return getThis();
	}
	
	@Override
	public T Address(Address address) {
		immobile.setAddress(address);
		return getThis();
	}
	@Override
	public T type(String type) {
		immobile.setType(Type.valueOf(type));
		return getThis();
	}
	
	public abstract T getThis();
	public abstract Immobile build();


}
